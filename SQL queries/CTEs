-- movies and revenue full join, CTE
with movies_and_revenue
    (
        movie_id,
        movie,
        genre,
        rating,
        revenue,
        rental_id,
        rental_rate,
        rental_duration,
        customer_id,
        customer
    )
as (
    select
        film.film_id,
        film.title,
        category.name as genre,
        film.rating,
        payment.amount as revenue,
        rental.rental_id,
        film.rental_rate,
        film.rental_duration,
        customer.customer_id,
        concat (customer.first_name, ' ', customer.last_name) as customer
    from payment
    full join rental on payment.rental_id = rental.rental_id
    full join inventory on rental.inventory_id = inventory.inventory_id
    full join film on inventory.film_id = film.film_id
    full join film_category on film.film_id = film_category.film_id
    full join category on film_category.category_id = category.category_id
    full join customer on payment.customer_id = customer.customer_id
    ),

-- customers and revenue, full join, CTE
    customers_and_revenue
    (
        customer_id,
        customer,
        total_revenue
    )
as (
    select
        movies_and_revenue.customer_id,
        movies_and_revenue.customer,
        sum (revenue) as total_revenue
    from movies_and_revenue
    full join customer on movies_and_revenue.customer_id = customer.customer_id
    where movies_and_revenue.customer_id > 0
    group by movies_and_revenue.customer_id, movies_and_revenue.customer
    ),

--movies with total revenue smaller than the number of rentals multiplied by rental rate
    discounted_movies
    (
        film_id,
        movie,
        total_revenue,
        number_of_rentals,
        minimum_revenue,
        rental_rate
    )
    as (        
        select
        movies_and_revenue.movie_id,
        movies_and_revenue.movie,
        sum (revenue) as total_revenue,
        count (rental_id) as number_of_rentals,
        count (movies_and_revenue.rental_id) * movies_and_revenue.rental_rate as minimum_revenue,
        movies_and_revenue.rental_rate
        from movies_and_revenue
        group by movies_and_revenue.movie_id, movies_and_revenue.movie, movies_and_revenue.rental_rate
        having count (movies_and_revenue.rental_id) * movies_and_revenue.rental_rate > sum (movies_and_revenue.revenue)
        order by movies_and_revenue.movie_id asc
        )
